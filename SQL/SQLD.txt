/******************************************************************************/
--Dropping Tables--
DROP TABLE Booking_Receipt;
DROP TABLE Customer_Info;
DROP TABLE Guest_Info;
DROP TABLE Staff_Info;
DROP TABLE Table_Info;
DROP TABLE Burger_Shack;

/******************************************************************************/
--Table Creation--

--Table 1 Burger Shack--
create table Burger_Shack ( 
    Shack_ID varchar2(20),
    Shack_name varchar2(40) NOT NULL,   
    Shack_address varchar2(200) NOT NULL,   
    Shack_phonenumber varchar2(20) NOT NULL,
    
    PRIMARY KEY (Shack_ID)
);

--Table 2 Table Info--
create table Table_Info ( 
    Table_ID varchar2(20),
    Table_Type varchar2(20),
    Table_Location varchar2(20), 
    /*DEFAULT constraint to input time of table arrival automatically*/
    Table_In date,
    Table_out date,

    PRIMARY KEY (Table_ID)
);

--Table 3 Staff Info--
create table Staff_Info (   
    Staff_ID varchar2(10),   
    Staff_Name varchar2(20) NOT NULL,   
    Staff_Surname varchar2(20) NOT NULL,   
    Staff_Role varchar2(30) NOT NULL,   
    Staff_Branch varchar2(40) NOT NULL,   
    Staff_address varchar2(200) NOT NULL,   
    Staff_phonenumber varchar2(20) NOT NULL,   
    Staff_email varchar2(50) NOT NULL,   
    Staff_DOB DATE NOT NULL,   
    /*DEFAULT constraint to input start date automatically*/  
    Staff_Start date,  
    Shack_ID varchar2(20),  
    --Table_ID varchar2(10),

    PRIMARY KEY (Staff_ID),
    --CONSTRAINT table_id_fk FOREIGN KEY (Table_ID) REFERENCES Table_Info(Table_ID),
    CONSTRAINT shack_id_fk FOREIGN KEY (Shack_ID) REFERENCES Burger_Shack(Shack_ID),
    CONSTRAINT staff_email_uniq UNIQUE (Staff_email), 
        CONSTRAINT staff_email_chk CHECK(Staff_email like '%@burgershack.com')
);

--Table 4 Guest Info--
create table Guest_Info (   
    Guest_ID varchar2(20),
    Guest_Name varchar2(30) NOT NULL,   
    Guest_Surname varchar2(30) NOT NULL,   
    Guest_Email varchar2(40) NOT NULL,   
    Guest_Address varchar2(50),   
    Guest_Phone varchar2(20) NOT NULL,   
    /*To verify a guest has a covid passport 0 or 1*/ 
    Guest_Cert int,  
    Table_ID varchar2(20), 

    PRIMARY KEY (Guest_ID),
    CONSTRAINT table_id_fk2 FOREIGN KEY (Table_ID) REFERENCES Table_Info(Table_ID),
    CONSTRAINT guest_email_uniq UNIQUE (Guest_Email), 
        CONSTRAINT guest_email_chk CHECK(Guest_Email like '%@%')

);

--Table 5 Customer Info--
create table Customer_info (   
    Customer_ID varchar2(20),   
    Cus_Name varchar2(20) NOT NULL,
    Cus_Surname varchar2(20) NOT NULL,
    Cus_Address varchar2(50),   
    Cus_Phone varchar(50) NOT NULL, 
    Cus_Email varchar(50) NULL,
    /*CHECK constraint to verify if age over 18 to book table*/ 
    Age int CHECK (Age>=18),
    /*To verify a Customer has a covid passport*/ 
    Cus_Cert int,
    Cus_arrive DATE,
    Table_ID varchar2(20),

    PRIMARY KEY (Customer_ID),
    CONSTRAINT table_id_fk3 FOREIGN KEY (Table_ID) REFERENCES Table_Info(Table_ID),
    CONSTRAINT cus_email_uniq UNIQUE (Cus_Email), 
        CONSTRAINT cus_email_chk CHECK(Cus_Email like '%@%')

);

--Table 6 Booking Receipt--
create table Booking_Receipt (   
    Booking_ID varchar2(20),
    No_of_people number NOT NULL,   
    Booking_Type varchar2(10) NOT NULL,
    /*DEFAULT constraint to set fine to zero*/
    Bill_total number DEFAULT (0),   
    /*DEFAULT constraint to set fine to zero*/ 
    Fine number DEFAULT (0),  
    Customer_ID varchar2(20), 
    Staff_ID varchar2(10), 
    Table_ID varchar(10),

    PRIMARY KEY (Booking_ID),
    CONSTRAINT customer_id_fk FOREIGN KEY (Customer_ID) REFERENCES Customer_Info(Customer_ID),
    CONSTRAINT staff_id_fk FOREIGN KEY (Staff_ID) REFERENCES Staff_Info(Staff_ID),
    CONSTRAINT table_id_fk5 FOREIGN KEY (Table_ID) REFERENCES Table_Info(Table_ID)
);
    


    create table Entity ( 
    Staff_ID varchar2(10),
    Table_ID varchar2(10),
    CONSTRAINT staff_id_fk3 FOREIGN KEY (Staff_ID) REFERENCES  Staff_Info(Staff_ID),
    CONSTRAINT table_id_fk4 FOREIGN KEY (Table_ID) REFERENCES Table_Info(Table_ID)
    );
    
/*********************************************************************************************************************************************/
    /*Sequences for auto-increments*/
    
    CREATE SEQUENCE seq_shack
    MINVALUE 1
    START WITH 1
    INCREMENT BY 1
    CACHE 10;
    
    CREATE SEQUENCE seq_Table
    MINVALUE 1
    START WITH 1
    INCREMENT BY 1
    CACHE 20;
    
    CREATE SEQUENCE seq_Staff
    MINVALUE 1
    START WITH 1
    INCREMENT BY 1
    CACHE 10;
    
    CREATE SEQUENCE seq_Guest
    MINVALUE 1
    START WITH 1
    INCREMENT BY 1
    CACHE 10;
    
    CREATE SEQUENCE seq_Customer
    MINVALUE 1
    START WITH 1
    INCREMENT BY 1
    CACHE 10;
    
    CREATE SEQUENCE seq_Booking
    MINVALUE 1
    START WITH 1
    INCREMENT BY 1
    CACHE 10;
    
/******************************************************************************************************************************************************************/
    ALTER SESSION SET nls_date_format = 'DD/MON/YYYY hh24:mi:ss';
    
    /*Burger Shack table entry*/
    /*4 values*/
    INSERT INTO Burger_Shack (Shack_ID,Shack_name,Shack_address,Shack_phonenumber)
    VALUES (seq_shack.nextval, 'Burger Shack Temple Bar', 'Fownes Street Lower, Temple Bar, Dublin','016750801');
    INSERT INTO Burger_Shack (Shack_ID,Shack_name,Shack_address,Shack_phonenumber)
    VALUES (seq_shack.nextval, 'Burger Shack Stillorgan', 'Lower Kilmacud Rd, Stillorgan, Dublin','012883977');
    INSERT INTO Burger_Shack (Shack_ID,Shack_name,Shack_address,Shack_phonenumber)
    VALUES (seq_shack.nextval, 'Burger Shack Dundrum', 'Unit 9 Dundrum Town Centre, Dundrum, Dublin 16','012981178');
    INSERT INTO Burger_Shack (Shack_ID,Shack_name,Shack_address,Shack_phonenumber)
    VALUES (seq_shack.nextval, 'Burger Shack Malahide Road', 'Coolock Retail Park, Malahide Rd, Priorswood, Dublin 17','018480714');
    INSERT INTO Burger_Shack (Shack_ID,Shack_name,Shack_address,Shack_phonenumber)
    VALUES (seq_shack.nextval, 'Burger Shack Dublin Airport DT', 'Block a Dublin Airport Business Park, Swords Rd, Corballis, Dublin 9','018447370');
    
    /* Table Info table entry */ 
    /*5 values*/
    INSERT INTO Table_Info (Table_ID,Table_Type,Table_Location,Table_in,Table_out)
    VALUES (seq_Table.nextval,'2','outside',TO_DATE('07/28/2020 13:30:00', 'MM/DD/YYYY HH24:MI:SS'),TO_DATE('07/28/2020 15:30:00', 'MM/DD/YYYY HH24:MI:SS'));
    INSERT INTO Table_Info (Table_ID,Table_Type,Table_Location,Table_in,Table_out)
    VALUES (seq_Table.nextval,'2','window',TO_DATE('07/14/2020 13:20:00', 'MM/DD/YYYY HH24:MI:SS'),TO_DATE('07/14/2020 15:20:00', 'MM/DD/YYYY HH24:MI:SS'));
    INSERT INTO Table_Info (Table_ID,Table_Type,Table_Location,Table_in,Table_out)
    VALUES (seq_Table.nextval,'4','outside',TO_DATE('07/16/2020 17:30:00', 'MM/DD/YYYY HH24:MI:SS'),TO_DATE('07/16/2020 19:30:00', 'MM/DD/YYYY HH24:MI:SS'));
    INSERT INTO Table_Info (Table_ID,Table_Type,Table_Location,Table_in,Table_out)
    VALUES (seq_Table.nextval,'4','window',TO_DATE('07/18/2020 13:20:00', 'MM/DD/YYYY HH24:MI:SS'),TO_DATE('07/18/2020 15:20:00', 'MM/DD/YYYY HH24:MI:SS'));
    INSERT INTO Table_Info (Table_ID,Table_Type,Table_Location,Table_in,Table_out)
    VALUES (seq_Table.nextval,'6','interior',TO_DATE('07/05/2020 14:40:00', 'MM/DD/YYYY HH24:MI:SS'),TO_DATE('07/05/2020 16:40:00', 'MM/DD/YYYY HH24:MI:SS'));
    
    /*Staff Info table entry*/
    /*10 values*/
    INSERT INTO Staff_Info (Staff_ID, Staff_Name, Staff_Surname, Staff_Role, Staff_Branch, Staff_address, Staff_phonenumber, Staff_email, Staff_DOB, Staff_start)
    VALUES (seq_Staff.nextval,'Nathan','Flannagan', 'Janitor', 'Burger Shack Temple Bar', 'APARTMENT 1, ARKLE HOUSE, TALBOT STREET, DUBLIN 1', '0858526422', 'Flanagan@burgershack.com', TO_DATE('11/April/2001','DD/MON/YY'),TO_DATE('26/September/1998','DD/MON/YY'));
    INSERT INTO Staff_Info (Staff_ID, Staff_Name, Staff_Surname, Staff_Role, Staff_Branch, Staff_address, Staff_phonenumber, Staff_email, Staff_DOB, Staff_start)
    VALUES (seq_Staff.nextval,'Sadhbh','Gowran', 'Restaurant manager', 'Burger Shack Temple Bar', 'APARTMENT 2, ARKLE HOUSE, TALBOT STREET, DUBLIN 1', '0855464722', 'Gowran@burgershack.com', TO_DATE('04/September/2000','DD/MON/YY'),TO_DATE('16/June/1997','DD/MON/YY'));
    INSERT INTO Staff_Info (Staff_ID, Staff_Name, Staff_Surname, Staff_Role, Staff_Branch, Staff_address, Staff_phonenumber, Staff_email, Staff_DOB, Staff_start)
    VALUES (seq_Staff.nextval,'Twila','Habab', 'Assistant manager', 'Burger Shack Temple Bar', 'APARTMENT 3, ARKLE HOUSE, TALBOT STREET, DUBLIN 1', '0858567543', 'Habab@burgershack.com', TO_DATE('22/May/2000','DD/MON/YY'),TO_DATE('11/April/2001','DD/MON/YY'));
    INSERT INTO Staff_Info (Staff_ID, Staff_Name, Staff_Surname, Staff_Role, Staff_Branch, Staff_address, Staff_phonenumber, Staff_email, Staff_DOB, Staff_start)
    VALUES (seq_Staff.nextval,'Jaycel','Estrellado', 'Front counter cashier', 'Burger Shack Temple Bar', 'APARTMENT 4, ARKLE HOUSE, TALBOT STREET, DUBLIN 1', '0859876543', 'Estrellado@burgershack.com', TO_DATE('17/January/2001','DD/MON/YY'),TO_DATE('01/May/1999','DD/MON/YY'));
    INSERT INTO Staff_Info (Staff_ID, Staff_Name, Staff_Surname, Staff_Role, Staff_Branch, Staff_address, Staff_phonenumber, Staff_email, Staff_DOB, Staff_Start)
    VALUES (seq_Staff.nextval,'Josh','potato', 'Prep or grill cook', 'Burger Shack Temple Bar', 'APARTMENT 5, ARKLE HOUSE, TALBOT STREET, DUBLIN 1', '0858432472', 'Potato@burgershack.com', TO_DATE('23/July/1999','DD/MON/YY'),TO_DATE('13/April/2000','DD/MON/YY'));
    
    UPDATE Staff_Info
    SET Shack_ID = 1
    WHERE Staff_Branch = 'Burger Shack Temple Bar';
    
    /*Guest Table table entry*/
    /*7 Values*/
    INSERT INTO Guest_Info (Guest_ID, Guest_Name, Guest_Surname, Guest_Email, Guest_Address, Guest_Phone, Guest_Cert)
    VALUES (seq_Guest.nextval,'Isaac', 'Asimov', 'Asimov@protonmail.com', 'Petrovichi, Russian SFSR', '0858526422', '0');
    INSERT INTO Guest_Info (Guest_ID, Guest_Name, Guest_Surname, Guest_Email, Guest_Address, Guest_Phone, Guest_Cert)
    VALUES (seq_Guest.nextval,'Philip', 'Dick', 'Dick@protonmail.com', 'Chicago, Illinois', '0858526444', '1');
    INSERT INTO Guest_Info (Guest_ID, Guest_Name, Guest_Surname, Guest_Email, Guest_Address, Guest_Phone, Guest_Cert)
    VALUES (seq_Guest.nextval,'William','Gibson','Gibson@protonmail.com', 'Conway, South Carolina', '0858432345', '1');
    INSERT INTO Guest_Info (Guest_ID, Guest_Name, Guest_Surname, Guest_Email, Guest_Address, Guest_Phone, Guest_Cert)
    VALUES (seq_Guest.nextval,'Robin','Skinner','Cavetown@protonmail.com', 'Oxford, England', '0858543243', '0');
    INSERT INTO Guest_Info (Guest_ID, Guest_Name, Guest_Surname, Guest_Email, Guest_Address, Guest_Phone, Guest_Cert)
    VALUES (seq_Guest.nextval,'Frank','Herbert','Herbert@protonmail.com', 'Tacoma, Washington', '0856545734', '1');
    INSERT INTO Guest_Info (Guest_ID, Guest_Name, Guest_Surname, Guest_Email, Guest_Address, Guest_Phone, Guest_Cert)
    VALUES (seq_Guest.nextval,'Douglas','Adams','Adams@protonmail.com', 'Cambridge, Cambridgeshire, England', '0856545734', '1');
    INSERT INTO Guest_Info (Guest_ID, Guest_Name, Guest_Surname, Guest_Email, Guest_Address, Guest_Phone, Guest_Cert)
    VALUES (seq_Guest.nextval,'Margaret','Atwood','Atwood@protonmail.com', 'Ottawa, Ontario, Canada', '0856545734', '1');
    INSERT INTO Guest_Info (Guest_ID, Guest_Name, Guest_Surname, Guest_Email, Guest_Address, Guest_Phone, Guest_Cert)
    VALUES (seq_Guest.nextval,'Eoin','Colfer','Colfer@protonmail.com', 'Wexford, Ireland', '0858526422', '1');
    INSERT INTO Guest_Info (Guest_ID, Guest_Name, Guest_Surname, Guest_Email, Guest_Address, Guest_Phone, Guest_Cert)
    VALUES (seq_Guest.nextval,'Aldous','Huxley','Huxley@protonmail.com', 'Godalming, Surrey, England', '0858526444', '1');
    INSERT INTO Guest_Info (Guest_ID, Guest_Name, Guest_Surname, Guest_Email, Guest_Address, Guest_Phone, Guest_Cert)
    VALUES (seq_Guest.nextval,'Daniel','Keyes','Keyes@protonmail.com', 'Brooklyn, New York', '0858432345','1');
    INSERT INTO Guest_Info (Guest_ID, Guest_Name, Guest_Surname, Guest_Email, Guest_Address, Guest_Phone, Guest_Cert)
    VALUES (seq_Guest.nextval,'Stephen','King','King@protonmail.com', 'Portland, Maine, U.S.', '0858543243', '1');
    
    /*Customer Info table entry*/
    /*6 Values*/
    INSERT INTO Customer_Info (Customer_ID, Cus_Name, Cus_Surname, Cus_Address, Cus_Phone, Cus_Cert, Age, Cus_arrive, Cus_Email)
    VALUES (seq_Customer.nextval,'Danny', 'Davito', 'Malibu', '0858526422', '1', '25', TO_DATE('07/28/2020 13:30:18', 'MM/DD/YYYY HH24:MI:SS'), 'Davito@protonmail.com');
    INSERT INTO Customer_Info (Customer_ID, Cus_Name, Cus_Surname, Cus_Address, Cus_Phone, Cus_Cert, Age, Cus_arrive, Cus_Email)
    VALUES (seq_Customer.nextval,'Bayonetta', 'Cereza', 'São Paulo', '0850987654', '1', '28', TO_DATE('07/14/2020 13:20:18', 'MM/DD/YYYY HH24:MI:SS'), 'Bayonetta@protonmail.com');
    INSERT INTO Customer_Info (Customer_ID, Cus_Name, Cus_Surname, Cus_Address, Cus_Phone, Cus_Cert, Age, Cus_arrive, Cus_Email)
    VALUES (seq_Customer.nextval,'Jeanne', 'Umbran', 'Rio de Janeiro', '0854732789', '1', '21', TO_DATE('07/16/2020 17:30:01', 'MM/DD/YYYY HH24:MI:SS'), 'Jeanne@protonmail.com');
    INSERT INTO Customer_Info (Customer_ID, Cus_Name, Cus_Surname, Cus_Address, Cus_Phone,Cus_Cert, Age, Cus_arrive, Cus_Email)
    VALUES (seq_Customer.nextval,'Luka', 'Antonio', 'Brasília', '0872312342', '1', '23', TO_DATE('07/17/2020 18:30:09', 'MM/DD/YYYY HH24:MI:SS'), 'Luka@protonmail.com');
    INSERT INTO Customer_Info (Customer_ID, Cus_Name, Cus_Surname, Cus_Address, Cus_Phone, Cus_Cert, Age, Cus_arrive, Cus_Email)
    VALUES (seq_Customer.nextval,'Rodin', 'Jarrett', 'Salvador', '0862378438', '1', '31', TO_DATE('07/18/2020 13:20:18', 'MM/DD/YYYY HH24:MI:SS'), 'Rodin@protonmail.com');
    INSERT INTO Customer_Info (Customer_ID, Cus_Name, Cus_Surname, Cus_Address, Cus_Phone, Cus_Cert, Age, Cus_arrive, Cus_Email)
    VALUES (seq_Customer.nextval,'Simon', 'Jarrett', 'Fortaleza', '0866744654', '1', '40', TO_DATE('07/05/2020 14:40:39', 'MM/DD/YYYY HH24:MI:SS'), 'Simon@protonmail.com');
    
    /*Booking_Receipt table entry*/
    /*3 values*/
    INSERT INTO Booking_Receipt (Booking_ID, No_of_people, Booking_Type, Bill_Total)
    VALUES (seq_Booking.nextval, 2,'phone', 32.50);
    INSERT INTO Booking_Receipt (Booking_ID, No_of_people, Booking_Type, Bill_Total)
    VALUES (seq_Booking.nextval, 2,'online', 47.25);
    INSERT INTO Booking_Receipt (Booking_ID, No_of_people, Booking_Type, Bill_Total)
    VALUES (seq_Booking.nextval, 3,'phone', 64.00);
    INSERT INTO Booking_Receipt (Booking_ID, No_of_people, Booking_Type, Bill_Total)
    VALUES (seq_Booking.nextval, 4,'online', 88.50);
    INSERT INTO Booking_Receipt (Booking_ID, No_of_people, Booking_Type, Bill_Total)
    VALUES (seq_Booking.nextval, 5,'online', 100.50);
    
    
/**************************************************************************************************************************************************************/
    --Updates--
    
    UPDATE Customer_Info SET Table_ID = '1' WHERE Customer_ID = '1';
    UPDATE Customer_Info SET Table_ID = '2' WHERE Customer_ID = '2';
    UPDATE Customer_Info SET Table_ID = '3' WHERE Customer_ID = '3';
    UPDATE Customer_Info SET Table_ID = '4' WHERE Customer_ID = '4';
    UPDATE Customer_Info SET Table_ID = '5' WHERE Customer_ID = '5';
    
    UPDATE Guest_Info SET Table_ID = '1' WHERE Guest_ID = '1';
    UPDATE Guest_Info SET Table_ID = '2' WHERE Guest_ID = '2';
    UPDATE Guest_Info SET Table_ID = '3' WHERE Guest_ID = '3'; 
    UPDATE Guest_Info SET Table_ID = '3' WHERE Guest_ID = '4';
    UPDATE Guest_Info SET Table_ID = '4' WHERE Guest_ID = '5';
    UPDATE Guest_Info SET Table_ID = '4' WHERE Guest_ID = '6';
    UPDATE Guest_Info SET Table_ID = '4' WHERE Guest_ID = '7';
    UPDATE Guest_Info SET Table_ID = '5' WHERE Guest_ID = '8'; 
    UPDATE Guest_Info SET Table_ID = '5' WHERE Guest_ID = '9';
    UPDATE Guest_Info SET Table_ID = '5' WHERE Guest_ID = '10';
    UPDATE Guest_Info SET Table_ID = '5' WHERE Guest_ID = '11';
    
    UPDATE Booking_Receipt SET Customer_ID = '1', Staff_ID = '4', Table_ID = '1' WHERE Booking_ID = '1';
    UPDATE Booking_Receipt SET Customer_ID = '2', Staff_ID = '2', Table_ID = '2' WHERE Booking_ID = '2';
    UPDATE Booking_Receipt SET Customer_ID = '3', Staff_ID = '4', Table_ID = '3' WHERE Booking_ID = '3';
    UPDATE Booking_Receipt SET Customer_ID = '4', Staff_ID = '3', Table_ID = '4' WHERE Booking_ID = '4';
    UPDATE Booking_Receipt SET Customer_ID = '5', Staff_ID = '4', Table_ID = '5' WHERE Booking_ID = '5';
    
/*******************************************************************************************************************************************************************/
    
    --to see all the tables--
    SELECT * FROM Booking_Receipt;
    SELECT * FROM Customer_Info;
    SELECT * FROM Guest_Info;
    SELECT * FROM Staff_Info;
    SELECT * FROM Table_Info;
    SELECT * FROM Burger_Shack;
    
/**********************************************************************************************************************************************************************/
--QUERIES--

    --Update--
    --Updating a particuar attribute of a customers details--
    UPDATE Customer_Info
    SET Cus_Phone = '01189998819991197253'
    WHERE Customer_ID = 1;
    
    --Delete--
    --Deleting a customers record--
    DELETE FROM Customer_Info WHERE Cus_Name='Simon';
    
    
    --Case Statement--
    SELECT Guest_Cert
    FROM Guest_Info
    ORDER BY
    (CASE
       WHEN Guest_Cert = 0 THEN 'Please sit outside'
       ELSE 'Can sit inside'
    END);
    
    
    --Union--
    --Find a list of all people who are coming to eat in the burger shack--
    SELECT Customer_ID AS Customers, Cus_Name, Cus_Surname, Customer_Info.Table_ID
    FROM Customer_Info
    UNION
    SELECT Guest_ID, Guest_Name, Guest_Surname, Guest_Info.Table_ID
    FROM Guest_info
    ORDER BY Table_ID DESC;
    
    
    --Left Join--
    --Find all the details for the bill--
    SELECT Booking_Receipt.Bill_total, Booking_Receipt.Fine, Booking_Receipt.Table_ID, Staff_Info.Staff_Name
    FROM Booking_Receipt
    LEFT JOIN Staff_Info
    ON Booking_Receipt.Staff_ID = Staff_Info.Staff_ID;
    
    
    --Right Join--
    SELECT Burger_Shack.Shack_ID, Burger_Shack.Shack_Name, Staff_Info.Staff_ID, Staff_Info.Staff_Name
    FROM Burger_Shack
    RIGHT JOIN Staff_Info
    ON Burger_Shack.Shack_ID = Staff_Info.Shack_ID;


    --Inner Join--
    SELECT Customer_Info.Customer_ID, Customer_Info.Cus_Name, Table_Info.Table_Type, Table_Info.Table_Location, COUNT(*) AS number_of_bookings
    FROM Customer_Info
    INNER JOIN Table_Info ON Customer_Info.Table_ID = Table_Info.Table_ID
    GROUP BY Customer_Info.Customer_ID, Customer_Info.Cus_Name, Table_Info.Table_Type, Table_Info.Table_Location
    ORDER BY number_of_bookings DESC, Table_Type DESC;


    --Intersect--
    SELECT
        Table_ID
    FROM
        Booking_Receipt
    INTERSECT 
    SELECT
        Customer_ID
    FROM
        Customer_Info
    ORDER BY
        Table_ID;
    
    
    --View--
    CREATE VIEW Burger_view AS
    SELECT Guest_Info.Guest_ID
    FROM Guest_Info
    WHERE Guest_Info.Guest_ID = 'Identification';
    
    --Fine--
      CASE
    
       WHEN Table_Out < CURRENT_TIMESTAMP(factional_second_precision) THEN Table_Info.Fine + 5;
     
       ELSE Table_Info.Fine :=0;
    
    END;
/***************************************************************************************************************************************************************/